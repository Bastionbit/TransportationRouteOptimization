//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElGatoMensajero.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class personas
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public personas()
        {
            this.paquetes = new HashSet<paquetes>();
            this.paquetes1 = new HashSet<paquetes>();
        }

        public int id { get; set; }

        [Required(ErrorMessage = "El email es obligatorio")]
        [StringLength(200, ErrorMessage = "Debe contener entre 5 y 200 caracteres", MinimumLength = 5)]
        [RegularExpression("^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$", ErrorMessage = "Debe ser un correo válido")]
        [DataType(DataType.EmailAddress)]
        public string email { get; set; }

        [Required(ErrorMessage = "La contraseña es obligatoria")]
        [StringLength(255, ErrorMessage = "Debe tener entre 5 y 255 carácteres", MinimumLength = 5)]
        [DataType(DataType.Password)]
        public string password { get; set; }

        [Required(ErrorMessage = "La contraseña es obligatoria")]
        [StringLength(255, ErrorMessage = "Debe tener entre 5 y 255 carácteres", MinimumLength = 5)]
        [DataType(DataType.Password)]
        [Compare("password", ErrorMessage = "Las contraseñas no coinciden")]
        public string repeatPassword { get; set; }

        [Required(ErrorMessage = "El nombre es obligatorio")]
        [StringLength(64, ErrorMessage = "Debe tener entre 2 y 64 carácteres", MinimumLength = 2)]
        public string nombre { get; set; }

        [StringLength(255, ErrorMessage = "Debe tener entre 2 y 255 carácteres", MinimumLength = 2)]
        public string apellidos { get; set; }

        [Required(ErrorMessage = "El teléfono es obligatorio")]
        [DataType(DataType.PhoneNumber)]
        public int telefono { get; set; }

        [Required(ErrorMessage = "La fecha de nacimiento es obligatoria")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}")]
        public System.DateTime fecha_nacimiento { get; set; }

        [Required(ErrorMessage = "La dirección es obligatoria")]
        [StringLength(255, ErrorMessage = "Debe tener entre 3 y 255 carácteres", MinimumLength = 3)]
        public string direccion { get; set; }

        [Required(ErrorMessage = "El código postal es obligatorio")]
        [DataType(DataType.PostalCode)]
        public int codPostal { get; set; }

        public string rol { get; set; }

        public virtual empleados empleados { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<paquetes> paquetes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<paquetes> paquetes1 { get; set; }
        public virtual roles roles { get; set; }
        public virtual usuarios usuarios { get; set; }
    }
}
